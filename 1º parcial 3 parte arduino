#define A 10
#define B 11
#define C 5
#define D 6
#define E 7
#define F 9
#define G 8
#define SUBE 4
#define BAJA 3
#define RESET 2
#define UNIDAD A4
#define DECENA A5
#define APAGADOS 0
#define TIMEDISPLAYON 10
#define SENSOR A0
#define MOTOR 12
#define FOTODIODO A1
  

int contador = 0;
int sube = 1;
int subePrevia = 1;
int baja = 1;
int bajaPrevia = 1;
int reset = 1;
int resetPrevia = 1;

const float umbralTemperatura = 30.0;

const int lecturatemperatura = 300;


void setup()
{ 
  pinMode(10 , OUTPUT);
  pinMode(11 , OUTPUT);
  pinMode(5 , OUTPUT);
  pinMode(6 , OUTPUT);
  pinMode(7 , OUTPUT);
  pinMode(9 , OUTPUT);
  pinMode(8 , OUTPUT);
  pinMode(UNIDAD , OUTPUT);
  pinMode(DECENA , OUTPUT);
  pinMode(13, OUTPUT);
  pinMode(12, OUTPUT);
  
  pinMode(3, INPUT_PULLUP);
  pinMode(4, INPUT_PULLUP);
  pinMode(2, INPUT_PULLUP);
  pinMode(SUBE, INPUT_PULLUP);
  pinMode(BAJA, INPUT_PULLUP);
  pinMode(RESET, INPUT_PULLUP);
  
  printDigit(0);
  
  
}



void loop()
{
    	
  
  int presiono = keypressed();
  if(presiono == SUBE)
  {
    contador ++;
    if(contador>99)
      contador = 0;
  }
  else if (presiono == BAJA)
  {
    contador --;
    if(contador < 0)
      contador = 99;   
  }
  else if(presiono == RESET)
  {
    contador = 0;
  }
  
  float lectura;
  float temperatura;
  lectura = analogRead(SENSOR);
  temperatura = map(lectura, 20, 358, -5, 125);
  Serial.println("Temperatura: " + String(temperatura) + "Â°C");
  printCount(contador);
  
  if(temperatura> lecturatemperatura){
     digitalWrite(2, HIGH);
  }else{
  	
    digitalWrite(2, LOW);	
  }
  
  int sensorFotodiodo = analogRead(SENSOR);
  
  if(sensorFotodiodo > umbralTemperatura){
     digitalWrite(12, HIGH);
  }else{
  	
    digitalWrite(12, LOW);	
  }
}


void printDigit(int digit)
{
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
  switch(digit)
  {
  	case 1:
    {
    	digitalWrite(B, HIGH);
    	digitalWrite(C, HIGH);
      	break;
    }
    case 2:
    {	
      	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(E, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
  	case 3:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
    case 4:
    {
      	digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
      	digitalWrite(F, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }  	
    case 5:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(F, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
    case 6:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(E, HIGH);
      	digitalWrite(F, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
    case 7:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
      	break;
    }
    case 8:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(E, HIGH);
      	digitalWrite(F, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
    case 9:
    {
    	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(F, HIGH);
      	digitalWrite(G, HIGH);
      	break;
    }
  	case 0:
    {
      	digitalWrite(A, HIGH);
        digitalWrite(B, HIGH);
        digitalWrite(C, HIGH);
        digitalWrite(D, HIGH);
      	digitalWrite(E, HIGH);
      	digitalWrite(F, HIGH);
    	break;
    }
  }//switch
  	
  
  
}


    
int keypressed(void)
{
  
  sube = digitalRead(SUBE);
  baja = digitalRead(BAJA);
  reset = digitalRead(RESET);
  if(sube)
    subePrevia = 1;
  if(baja)
    bajaPrevia = 1;
  if(reset)
    resetPrevia = 1;
  
  	if(sube == 0 && sube != subePrevia)
    {
      subePrevia = sube;
      return SUBE;
    }
  
  	if(baja == 0 && baja != bajaPrevia)
    {
    	bajaPrevia = baja;
      return BAJA;
    
    }
  
  	if(reset == 0 && reset != resetPrevia)
    {
    	resetPrevia = reset;
      	return RESET;
    
    }
    
return 0;
}


void prendeDigito(int digito)
{
  if(digito == UNIDAD)
  {
  	digitalWrite(UNIDAD, LOW);
  	digitalWrite(DECENA, HIGH);
    delay(TIMEDISPLAYON);
  }
  else if(digito == DECENA)
  {
  	digitalWrite(UNIDAD, HIGH);
  	digitalWrite(DECENA, LOW);
    delay(TIMEDISPLAYON);
  
  }
  else
  {
  	digitalWrite(UNIDAD, HIGH);
  	digitalWrite(DECENA, HIGH);
  }

}


void printCount(int contador)
{
  prendeDigito(APAGADOS);
  printDigit(contador/10);
  prendeDigito(DECENA);
  prendeDigito(APAGADOS);
  printDigit(contador - 10*((int)contador /10));
  prendeDigito(UNIDAD);

}
